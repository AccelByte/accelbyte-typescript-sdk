/*
 * Copyright (c) 2022-2023 AccelByte Inc. All Rights Reserved
 * This is licensed software from AccelByte Inc, for limitations
 * and restrictions contact your company contract manager.
 */
/**
 * AUTO GENERATED
 */
/* eslint-disable camelcase */
import { AccelbyteSDK, ApiArgs, ApiUtils, Network } from '@accelbyte/sdk'
import { JwkSet } from './definitions/JwkSet.js'
import { OAuth20Public$ } from './endpoints/OAuth20Public$.js'

export function OAuth20PublicApi(sdk: AccelbyteSDK, args?: ApiArgs) {
  const sdkAssembly = sdk.assembly()

  const namespace = args?.namespace ? args?.namespace : sdkAssembly.namespace
  const cache = args?.cache ? args?.cache : sdkAssembly.cache
  const requestConfig = ApiUtils.mergedConfigs(sdkAssembly.config, args)

  /**
   * &lt;p&gt;This endpoint serves public keys for verifying JWT access tokens generated by this service.&lt;/p&gt; &lt;p&gt;When a client application wants to verify a JWT token, it needs to get the &#39;kid&#39; value found in the JWT token header and use it to look up the corresponding public key from a set returned by this endpoint. The client application can then use that public key to verify the JWT.&lt;/p&gt; &lt;p&gt;A client application might cache the keys so it doesn&#39;t need to do request every time it needs to verify a JWT token. If a client application caches the keys and a key with the same &#39;kid&#39; cannot be found in the cache, it should then try to refresh the keys by making a request to this endpoint again.&lt;/p&gt; &lt;p&gt;Please refer to the RFC for more information about JWK (JSON Web Key): https://tools.ietf.org/html/rfc7517&lt;/p&gt; &lt;br&gt;action code : 10709
   */
  async function getOauthJwks(): Promise<JwkSet> {
    const $ = new OAuth20Public$(Network.create(requestConfig), namespace, cache)
    const resp = await $.getOauthJwks()
    if (resp.error) throw resp.error
    return resp.response.data
  }

  return {
    getOauthJwks
  }
}
