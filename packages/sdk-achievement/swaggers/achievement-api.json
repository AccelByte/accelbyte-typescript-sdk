{
  "swagger": "2.0",
  "info": {
    "description": "Justice Achievement Service",
    "title": "justice-achievement-service",
    "version": "2.18.0"
  },
  "paths": {
    "/achievement/v1/admin/namespaces/{namespace}/achievements": {
      "get": {
        "description": "\u003cp\u003eRequired permission \n\u003ccode\u003eADMIN:NAMESPACE:{namespace}:ACHIEVEMENT [READ]\u003c/code\u003e and scope \u003ccode\u003esocial\u003c/code\u003e\u003c/p\u003e",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["Achievements"],
        "summary": "Query achievements",
        "operationId": "AdminListAchievements",
        "parameters": [
          {
            "type": "string",
            "description": "namespace of the game",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "description": "tags",
            "name": "tags",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 10,
            "description": "the maximum number of data that may be returned (1...100)",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "string",
            "default": "listOrder:asc",
            "description": "sort by, default is 'listOrder:asc', allow values: [listOrder, listOrder:asc, listOrder:desc, createdAt, createdAt:asc, createdAt:desc, updatedAt, updatedAt:asc, updatedAt:desc]",
            "name": "sortBy",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 0,
            "description": "offset",
            "name": "offset",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "filter by global achievement flag",
            "name": "global",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.PaginatedAchievementResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          }
        }
      },
      "post": {
        "description": "\u003cp\u003eRequired permission \n\t\t\t\u003ccode\u003eADMIN:NAMESPACE:{namespace}:ACHIEVEMENT [CREATE]\u003c/code\u003e and scope \u003ccode\u003esocial\u003c/code\u003e\u003c/p\u003e\n        \tOther detail info:\n          - achievementCode: Human readable unique code to indentify the achievement. Must be lowercase \n\t\t\tand maximum length is 32\n          - incremental:  If the achievement is not incremental, it does not need to store a goal value \n\t\t\t\t\t\t\tof a stat to be unlocked.\n                          If the achievement is incremental, it needs to set statCode and goalValue\n          - statCode: Selected statistic code, from the published statistic code event.Human readable unique \n\t\t\tcode to indentify the achievement. Must be lowercase and maximum length is 32\n          - goalValue: Statistics value required to unlock the achievement.\n          - defaultLanguage: localozation for achievement name and achievement description. Allowed format : en, en-US\n          - slug: specify the image they want to use, it can be file image name or something \n\t\t\tto define the achievement icon.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["Achievements"],
        "summary": "Create new achievement",
        "operationId": "AdminCreateNewAchievement",
        "parameters": [
          {
            "type": "string",
            "description": "namespace of the game",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/models.AchievementRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/models.AchievementResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          }
        }
      }
    },
    "/achievement/v1/admin/namespaces/{namespace}/achievements/export": {
      "get": {
        "description": "\u003cp\u003e\n\t\t\t\tRequired permission \u003ccode\u003eADMIN:NAMESPACE:{namespace}:ACHIEVEMENT [READ]\u003c/code\u003e\u003c/p\u003e\u003cp\u003eRequired Scope: \u003ccode\u003esocial\u003c/code\u003e\u003cp\u003eSuccessful response header will contain: \u003ccode\u003econtent-disposition: attachment; filename=achievement_\u003cnamespace\u003e_config.json\u003c/code\u003e\u003c/p\u003e",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["Achievements"],
        "summary": "Export achievements configuration into a json file",
        "operationId": "ExportAchievements",
        "parameters": [
          {
            "type": "string",
            "description": "namespace of the game",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "description": "tags",
            "name": "tags",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/models.Achievement"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          }
        }
      }
    },
    "/achievement/v1/admin/namespaces/{namespace}/achievements/import": {
      "post": {
        "description": "\n\t\t\t\tRequired permission ADMIN:NAMESPACE:{namespace}:ACHIEVEMENT [UPDATE]\n\n\t\t\t\tRequired Scope: social\n\n\t\t\t\tImport achievement configuration from file. It will merge with existing achievement.\n\t\t\t\tAvailable import strategy:\n\t\t\t\t- leaveOut: if achievement with same key exist, the existing will be used and imported one will be ignored (default)\n\t\t\t\t- replace: if achievement with same key exist, the imported achievement will be used and existing one will be removed\n\t\t\t",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "tags": ["Achievements"],
        "summary": "Import achievements from file",
        "operationId": "ImportAchievements",
        "parameters": [
          {
            "type": "string",
            "description": "namespace of the game",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "file",
            "description": "file to be imported",
            "name": "file",
            "in": "formData"
          },
          {
            "type": "string",
            "description": "strategy for import",
            "name": "strategy",
            "in": "formData"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/service.ImportConfigResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          }
        }
      }
    },
    "/achievement/v1/admin/namespaces/{namespace}/achievements/{achievementCode}": {
      "get": {
        "description": "\u003cp\u003eRequired permission \n\u003ccode\u003eADMIN:NAMESPACE:{namespace}:ACHIEVEMENT [READ]\u003c/code\u003e and scope \u003ccode\u003esocial\u003c/code\u003e\u003c/p\u003e",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["Achievements"],
        "summary": "Get an achievement",
        "operationId": "AdminGetAchievement",
        "parameters": [
          {
            "type": "string",
            "description": "namespace of the game",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "achievement code",
            "name": "achievementCode",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.AchievementResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          }
        }
      },
      "put": {
        "description": "\u003cp\u003eRequired permission \n\u003ccode\u003eADMIN:NAMESPACE:{namespace}:ACHIEVEMENT [UPDATE]\u003c/code\u003e and scope \u003ccode\u003esocial\u003c/code\u003e\u003c/p\u003e",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["Achievements"],
        "summary": "Update an achievement",
        "operationId": "AdminUpdateAchievement",
        "parameters": [
          {
            "type": "string",
            "description": "namespace of the game",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "achievement code",
            "name": "achievementCode",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/models.AchievementUpdateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.AchievementResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          }
        }
      },
      "delete": {
        "description": "\u003cp\u003eRequired permission \n\u003ccode\u003eADMIN:NAMESPACE:{namespace}:ACHIEVEMENT [DELETE]\u003c/code\u003e and scope \u003ccode\u003esocial\u003c/code\u003e\u003c/p\u003e",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["Achievements"],
        "summary": "Delete an achievement",
        "operationId": "AdminDeleteAchievement",
        "parameters": [
          {
            "type": "string",
            "description": "namespace of the game",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "achievement code",
            "name": "achievementCode",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          }
        }
      },
      "patch": {
        "description": "\u003cp\u003eRequired permission \n\u003ccode\u003eADMIN:NAMESPACE:{namespace}:ACHIEVEMENT [UPDATE]\u003c/code\u003e and scope \u003ccode\u003esocial\u003c/code\u003e\u003c/p\u003e",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["Achievements"],
        "summary": "Update achievements listOrder",
        "operationId": "AdminUpdateAchievementListOrder",
        "parameters": [
          {
            "type": "string",
            "description": "namespace of the game",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "achievement code",
            "name": "achievementCode",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/models.AchievementOrderUpdateRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          }
        }
      }
    },
    "/achievement/v1/admin/namespaces/{namespace}/global/achievements": {
      "get": {
        "description": "\u003cp\u003eRequired permission \n\t\t\t\u003ccode\u003eADMIN:NAMESPACE:{namespace}:ACHIEVEMENT [READ]\u003c/code\u003e and scope \u003ccode\u003esocial\u003c/code\u003e\u003c/p\u003e\n\t\t\t\u003cp\u003eNote:\u003c/p\u003e\n\t\t\t\u003cp\u003e Global achievement status value mean: \u003ccode\u003estatus = 1 (in progress)\u003c/code\u003e and \u003ccode\u003estatus = 2 (unlocked)\u003c/code\u003e\u003c/p\u003e",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["Global Achievements"],
        "summary": "Admin query global achievements [include achieved and in-progress]",
        "operationId": "AdminListGlobalAchievements",
        "parameters": [
          {
            "type": "string",
            "description": "namespace of the game",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "filter by status. available value: [in_progress, unlocked]",
            "name": "status",
            "in": "query"
          },
          {
            "type": "string",
            "description": "filter by achievement codes. multiple value separated by comma",
            "name": "achievementCodes",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "description": "tags",
            "name": "tags",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 10,
            "description": "the maximum number of data that may be returned (1...100)",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 0,
            "description": "offset",
            "name": "offset",
            "in": "query"
          },
          {
            "type": "string",
            "description": "sort by, allow values: [achievedAt, achievedAt:asc, achievedAt:desc, createdAt, createdAt:asc, createdAt:desc]",
            "name": "sortBy",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.PaginatedGlobalAchievementResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          }
        }
      }
    },
    "/achievement/v1/admin/namespaces/{namespace}/global/achievements/{achievementCode}/contributors": {
      "get": {
        "description": "\u003cp\u003eRequired permission \n\t\t\t\u003ccode\u003eADMIN:NAMESPACE:{namespace}:ACHIEVEMENT [READ]\u003c/code\u003e and scope \u003ccode\u003esocial\u003c/code\u003e\u003c/p\u003e",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["Global Achievements"],
        "summary": "Admin list contributors of global achievement",
        "operationId": "AdminListGlobalAchievementContributors",
        "parameters": [
          {
            "type": "string",
            "description": "namespace of the game",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "achievement code",
            "name": "achievementCode",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "default": 10,
            "description": "the maximum number of data that may be returned (1...100)",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 0,
            "description": "offset",
            "name": "offset",
            "in": "query"
          },
          {
            "type": "string",
            "default": "contributedValue:desc",
            "description": "sort by, default is 'contributedValue:desc', allow values: [contributedValue, contributedValue:asc, contributedValue:desc]",
            "name": "sortBy",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.PaginatedContributorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          }
        }
      }
    },
    "/achievement/v1/admin/namespaces/{namespace}/global/achievements/{achievementCode}/reset": {
      "delete": {
        "description": "\u003cp\u003e[TEST FACILITY ONLY]\u003c/p\u003e\n                         \u003cp\u003eRequired permission \n                         \u003ccode\u003eADMIN:NAMESPACE:{namespace}:ACHIEVEMENT [DELETE]\u003c/code\u003e and scope \u003ccode\u003esocial\u003c/code\u003e\n                  \u003c/p\u003e",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["Global Achievements"],
        "summary": "Reset global achievement",
        "operationId": "ResetGlobalAchievement",
        "parameters": [
          {
            "type": "string",
            "description": "namespace of the game",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "achievement code",
            "name": "achievementCode",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          }
        }
      }
    },
    "/achievement/v1/admin/namespaces/{namespace}/tags": {
      "get": {
        "description": "\u003cp\u003eRequired permission \n\u003ccode\u003eADMIN:NAMESPACE:{namespace}:ACHIEVEMENT [READ]\u003c/code\u003e and scope \u003ccode\u003esocial\u003c/code\u003e\u003c/p\u003e",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["Tags"],
        "summary": "Query tags",
        "operationId": "AdminListTags",
        "parameters": [
          {
            "type": "string",
            "description": "namespace of the game",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "like's query by tag name",
            "name": "name",
            "in": "query"
          },
          {
            "type": "string",
            "default": "name:asc",
            "description": "sort by, default is 'name:asc', allow values: [name, name:asc, name:desc, createdAt, createdAt:asc, createdAt:desc]",
            "name": "sortBy",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 10,
            "description": "the maximum number of data that may be returned (1...100)",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 0,
            "description": "offset",
            "name": "offset",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.PaginatedTagResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          }
        }
      }
    },
    "/achievement/v1/admin/namespaces/{namespace}/users/{userId}/achievements": {
      "get": {
        "description": "\u003cp\u003eRequired permission \n\t\t\t\u003ccode\u003eADMIN:NAMESPACE:{namespace}:USER:{userId}:ACHIEVEMENT [READ]\u003c/code\u003e and scope \u003ccode\u003esocial\u003c/code\u003e\u003c/p\u003e\n\t\t\t\u003cp\u003eNote:\u003c/p\u003e\n\t\t\t\u003cp\u003e User Achievement status value mean: \u003ccode\u003estatus = 1 (in progress)\u003c/code\u003e and \u003ccode\u003estatus = 2 (unlocked)\u003c/code\u003e\u003c/p\u003e\n\t\t\t\u003cp\u003e \u003ccode\u003eachievedAt\u003c/code\u003e value will return default value: \u003ccode\u003e0001-01-01T00:00:00Z\u003c/code\u003e for user achievement that locked or in progress\u003c/p\u003e",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["User Achievements"],
        "summary": "Query user achievements [include achieved and in-progress]",
        "operationId": "AdminListUserAchievements",
        "parameters": [
          {
            "type": "string",
            "description": "namespace of the game",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "user id",
            "name": "userId",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "description": "tags",
            "name": "tags",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 10,
            "description": "the maximum number of data that may be returned (1...100)",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 0,
            "description": "offset",
            "name": "offset",
            "in": "query"
          },
          {
            "type": "boolean",
            "default": true,
            "description": "prefer to query achieved",
            "name": "preferUnlocked",
            "in": "query"
          },
          {
            "type": "string",
            "description": "sort by, allow values: [achievedAt, achievedAt:asc, achievedAt:desc, createdAt, createdAt:asc, createdAt:desc]",
            "name": "sortBy",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.PaginatedUserAchievementResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          }
        }
      }
    },
    "/achievement/v1/admin/namespaces/{namespace}/users/{userId}/achievements/{achievementCode}/reset": {
      "delete": {
        "description": "\u003cp\u003e[TEST FACILITY ONLY]\u003c/p\u003e\n                         \u003cp\u003eRequired permission \n                         \u003ccode\u003eADMIN:NAMESPACE:{namespace}:USER:{userId}:ACHIEVEMENT [DELETE]\u003c/code\u003e and scope \u003ccode\u003esocial\u003c/code\u003e\n                  \u003c/p\u003e",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["User Achievements"],
        "summary": "Reset an achievement",
        "operationId": "AdminResetAchievement",
        "parameters": [
          {
            "type": "string",
            "description": "namespace of the game",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "achievement code",
            "name": "achievementCode",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "user id",
            "name": "userId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          }
        }
      }
    },
    "/achievement/v1/admin/namespaces/{namespace}/users/{userId}/achievements/{achievementCode}/unlock": {
      "put": {
        "description": "\u003cp\u003eRequired permission \n\u003ccode\u003eADMIN:NAMESPACE:{namespace}:USER:{userId}:ACHIEVEMENT [UPDATE]\u003c/code\u003e and scope \u003ccode\u003esocial\u003c/code\u003e\u003c/p\u003e",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["User Achievements"],
        "summary": "Unlock an achievement",
        "operationId": "AdminUnlockAchievement",
        "parameters": [
          {
            "type": "string",
            "description": "namespace of the game",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "user id",
            "name": "userId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "achievement code",
            "name": "achievementCode",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          }
        }
      }
    },
    "/achievement/v1/admin/namespaces/{namespace}/users/{userId}/anonymization/achievements": {
      "delete": {
        "description": "\u003cp\u003eThis API will delete specified user achievement\u003cp\u003e\n\t\t\t\t\t\t\u003cp\u003eRequired permission\n\t\t\t\t\t\t\u003ccode\u003eADMIN:NAMESPACE:{namespace}:USER:{userId}:ANONYMIZATION [DELETE]\u003c/code\u003e\n\t\t\t\t\t\t\u003c/p\u003e",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["Anonymization"],
        "summary": "Anonymize user's achievement",
        "operationId": "AdminAnonymizeUserAchievement",
        "parameters": [
          {
            "type": "string",
            "description": "namespace of the game",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "user id",
            "name": "userId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          }
        }
      }
    },
    "/achievement/v1/admin/namespaces/{namespace}/users/{userId}/global/achievements": {
      "get": {
        "description": "\u003cp\u003eRequired permission \n\t\t\t\u003ccode\u003eADMIN:NAMESPACE:{namespace}:USER:{userId}:ACHIEVEMENT [READ]\u003c/code\u003e and scope \u003ccode\u003esocial\u003c/code\u003e\u003c/p\u003e",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["Global Achievements"],
        "summary": "Admin list of global achievements that has been contributed by the user",
        "operationId": "AdminListUserContributions",
        "parameters": [
          {
            "type": "string",
            "description": "namespace of the game",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "user ID",
            "name": "userId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "achievement codes. multiple value separated by comma",
            "name": "achievementCodes",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 10,
            "description": "the maximum number of data that may be returned (1...100)",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 0,
            "description": "offset",
            "name": "offset",
            "in": "query"
          },
          {
            "type": "string",
            "default": "contributedValue:desc",
            "description": "sort by, default is 'contributedValue:desc', allow values: [contributedValue, contributedValue:asc, contributedValue:desc]",
            "name": "sortBy",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "description": "tags",
            "name": "tags",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.PaginatedUserContributionResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          }
        }
      }
    },
    "/achievement/v1/public/namespaces/{namespace}/achievements": {
      "get": {
        "description": "\u003cp\u003eRequired permission \n\u003ccode\u003eNAMESPACE:{namespace}:ACHIEVEMENT [READ]\u003c/code\u003e and scope \u003ccode\u003esocial\u003c/code\u003e\u003c/p\u003e",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["Achievements"],
        "summary": "Query achievements",
        "operationId": "PublicListAchievements",
        "parameters": [
          {
            "type": "string",
            "description": "namespace of the game",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "description": "tags",
            "name": "tags",
            "in": "query"
          },
          {
            "type": "string",
            "default": "listOrder:asc",
            "description": "sort by, default is 'listOrder:asc', allow values: [listOrder, listOrder:asc, listOrder:desc, createdAt, createdAt:asc, createdAt:desc, updatedAt, updatedAt:asc, updatedAt:desc]",
            "name": "sortBy",
            "in": "query"
          },
          {
            "type": "string",
            "description": "language, if the selected language not exist in achievement,it use default language",
            "name": "language",
            "in": "query",
            "required": true
          },
          {
            "type": "integer",
            "default": 10,
            "description": "the maximum number of data that may be returned (1...100)",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 0,
            "description": "offset",
            "name": "offset",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "filter by global achievement flag",
            "name": "global",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.PublicAchievementsResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          }
        }
      }
    },
    "/achievement/v1/public/namespaces/{namespace}/achievements/{achievementCode}": {
      "get": {
        "description": "\u003cp\u003eRequired permission \n\u003ccode\u003eNAMESPACE:{namespace}:ACHIEVEMENT [READ]\u003c/code\u003e and scope \u003ccode\u003esocial\u003c/code\u003e\u003c/p\u003e",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["Achievements"],
        "summary": "Get an achievement",
        "operationId": "PublicGetAchievement",
        "parameters": [
          {
            "type": "string",
            "description": "namespace of the game",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "achievement code",
            "name": "achievementCode",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "language, if the selected language not exist in achievement,it use default language",
            "name": "language",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.PublicAchievementResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          }
        }
      }
    },
    "/achievement/v1/public/namespaces/{namespace}/global/achievements": {
      "get": {
        "description": "\u003cp\u003eRequired permission \n\t\t\t\u003ccode\u003eNAMESPACE:{namespace}:ACHIEVEMENT [READ]\u003c/code\u003e and scope \u003ccode\u003esocial\u003c/code\u003e\u003c/p\u003e\n\t\t\t\u003cp\u003eNote:\u003c/p\u003e\n\t\t\t\u003cp\u003e Global achievement status value mean: \u003ccode\u003estatus = 1 (in progress)\u003c/code\u003e and \u003ccode\u003estatus = 2 (unlocked)\u003c/code\u003e\u003c/p\u003e",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["Global Achievements"],
        "summary": "Query global achievements [include achieved and in-progress]",
        "operationId": "PublicListGlobalAchievements",
        "parameters": [
          {
            "type": "string",
            "description": "namespace of the game",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "filter by status. available value: [in_progress, unlocked]",
            "name": "status",
            "in": "query"
          },
          {
            "type": "string",
            "description": "filter by achievement codes. multiple value separated by comma",
            "name": "achievementCodes",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "description": "tags",
            "name": "tags",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 10,
            "description": "the maximum number of data that may be returned (1...100)",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 0,
            "description": "offset",
            "name": "offset",
            "in": "query"
          },
          {
            "type": "string",
            "description": "sort by, allow values: [achievedAt, achievedAt:asc, achievedAt:desc, createdAt, createdAt:asc, createdAt:desc]",
            "name": "sortBy",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.PaginatedGlobalAchievementResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          }
        }
      }
    },
    "/achievement/v1/public/namespaces/{namespace}/global/achievements/{achievementCode}/contributors": {
      "get": {
        "description": "\u003cp\u003eRequired permission \n\t\t\t\u003ccode\u003eNAMESPACE:{namespace}:ACHIEVEMENT [READ]\u003c/code\u003e and scope \u003ccode\u003esocial\u003c/code\u003e\u003c/p\u003e",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["Global Achievements"],
        "summary": "List contributors of global achievement",
        "operationId": "ListGlobalAchievementContributors",
        "parameters": [
          {
            "type": "string",
            "description": "namespace of the game",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "achievement code",
            "name": "achievementCode",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "default": 10,
            "description": "the maximum number of data that may be returned (1...100)",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 0,
            "description": "offset",
            "name": "offset",
            "in": "query"
          },
          {
            "type": "string",
            "default": "contributedValue:desc",
            "description": "sort by, default is 'contributedValue:desc', allow values: [contributedValue, contributedValue:asc, contributedValue:desc]",
            "name": "sortBy",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.PaginatedContributorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          }
        }
      }
    },
    "/achievement/v1/public/namespaces/{namespace}/tags": {
      "get": {
        "description": "\u003cp\u003eRequired permission \n\u003ccode\u003eNAMESPACE:{namespace}:ACHIEVEMENT [READ]\u003c/code\u003e and scope \u003ccode\u003esocial\u003c/code\u003e\u003c/p\u003e",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["Tags"],
        "summary": "Query tags",
        "operationId": "PublicListTags",
        "parameters": [
          {
            "type": "string",
            "description": "namespace of the game",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "like's query by tag name",
            "name": "name",
            "in": "query"
          },
          {
            "type": "string",
            "default": "name:asc",
            "description": "sort by, default is 'name:asc', allow values: [name, name:asc, name:desc, createdAt, createdAt:asc, createdAt:desc]",
            "name": "sortBy",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 10,
            "description": "the maximum number of data that may be returned (1...100)",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 0,
            "description": "offset",
            "name": "offset",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.PaginatedTagResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          }
        }
      }
    },
    "/achievement/v1/public/namespaces/{namespace}/users/{userId}/achievements": {
      "get": {
        "description": "\u003cp\u003eRequired permission \n\t\t\t\u003ccode\u003eNAMESPACE:{namespace}:USER:{userId}:ACHIEVEMENT [READ]\u003c/code\u003e and scope \u003ccode\u003esocial\u003c/code\u003e\u003c/p\u003e\n\t\t\t\u003cp\u003eNote:\u003c/p\u003e\n\t\t\t\u003cp\u003e User Achievement status value mean: \u003ccode\u003estatus = 1 (in progress)\u003c/code\u003e and \u003ccode\u003estatus = 2 (unlocked)\u003c/code\u003e\u003c/p\u003e\n\t\t\t\u003cp\u003e \u003ccode\u003eachievedAt\u003c/code\u003e value will return default value: \u003ccode\u003e0001-01-01T00:00:00Z\u003c/code\u003e for user achievement that locked or in progress\u003c/p\u003e",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["User Achievements"],
        "summary": "Query user achievements [include achieved and in-progress]",
        "operationId": "PublicListUserAchievements",
        "parameters": [
          {
            "type": "string",
            "description": "namespace of the game",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "user id",
            "name": "userId",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "description": "tags",
            "name": "tags",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 10,
            "description": "the maximum number of data that may be returned (1...100)",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 0,
            "description": "offset",
            "name": "offset",
            "in": "query"
          },
          {
            "type": "boolean",
            "default": false,
            "description": "prefer to query achieved",
            "name": "preferUnlocked",
            "in": "query"
          },
          {
            "type": "string",
            "description": "sort by, allow values: [achievedAt, achievedAt:asc, achievedAt:desc, createdAt, createdAt:asc, createdAt:desc]",
            "name": "sortBy",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.PaginatedUserAchievementResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          }
        }
      }
    },
    "/achievement/v1/public/namespaces/{namespace}/users/{userId}/achievements/{achievementCode}/unlock": {
      "put": {
        "description": "\u003cp\u003eRequired permission \n\u003ccode\u003eNAMESPACE:{namespace}:USER:{userId}:ACHIEVEMENT [UPDATE]\u003c/code\u003e and scope \u003ccode\u003esocial\u003c/code\u003e\u003c/p\u003e",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["User Achievements"],
        "summary": "Unlock an achievement",
        "operationId": "PublicUnlockAchievement",
        "parameters": [
          {
            "type": "string",
            "description": "namespace of the game",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "user id",
            "name": "userId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "achievement code",
            "name": "achievementCode",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          }
        }
      }
    },
    "/achievement/v1/public/namespaces/{namespace}/users/{userId}/global/achievements": {
      "get": {
        "description": "\u003cp\u003eRequired permission \n\t\t\t\u003ccode\u003eNAMESPACE:{namespace}:USER:{userId}:ACHIEVEMENT [READ]\u003c/code\u003e and scope \u003ccode\u003esocial\u003c/code\u003e\u003c/p\u003e",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["Global Achievements"],
        "summary": "List of global achievements that has been contributed by the user",
        "operationId": "ListUserContributions",
        "parameters": [
          {
            "type": "string",
            "description": "namespace of the game",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "achievement codes. multiple value separated by comma",
            "name": "achievementCodes",
            "in": "query"
          },
          {
            "type": "string",
            "description": "user ID",
            "name": "userId",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "default": 10,
            "description": "the maximum number of data that may be returned (1...100)",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 0,
            "description": "offset",
            "name": "offset",
            "in": "query"
          },
          {
            "type": "string",
            "default": "contributedValue:desc",
            "description": "sort by, default is 'contributedValue:desc', allow values: [contributedValue, contributedValue:asc, contributedValue:desc]",
            "name": "sortBy",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "description": "tags",
            "name": "tags",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.PaginatedUserContributionResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          }
        }
      }
    },
    "/achievement/v1/public/namespaces/{namespace}/users/{userId}/global/achievements/{achievementCode}/claim": {
      "post": {
        "description": "\u003cp\u003eRequired permission \n\t\t\t\u003ccode\u003eNAMESPACE:{namespace}:USER:{userId}:ACHIEVEMENT [READ]\u003c/code\u003e and scope \u003ccode\u003esocial\u003c/code\u003e\u003c/p\u003e\n\t\t\t\u003cp\u003eNote:\u003c/p\u003e\n\t\t\t\u003cp\u003e Global achievement should be unlocked to claim the reward. Only contributor of global achievement are eligible for rewards",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["Global Achievements"],
        "summary": "Claim global achievement reward",
        "operationId": "ClaimGlobalAchievementReward",
        "parameters": [
          {
            "type": "string",
            "description": "namespace of the game",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "achievement code",
            "name": "achievementCode",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "user ID",
            "name": "userId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/response.Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "models.Achievement": {
      "required": [
        "Hidden",
        "Incremental",
        "Global",
        "ID",
        "ListOrder",
        "GoalValue",
        "UnlockedIcons",
        "LockedIcons",
        "CreatedAt",
        "UpdatedAt",
        "Namespace",
        "AchievementCode",
        "StatCode",
        "DefaultLanguage",
        "Tags",
        "Name",
        "Description",
        "CustomAttributes"
      ],
      "properties": {
        "AchievementCode": {
          "type": "string"
        },
        "CreatedAt": {
          "type": "string",
          "format": "date-time"
        },
        "CustomAttributes": {
          "type": "object"
        },
        "DefaultLanguage": {
          "type": "string"
        },
        "Description": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "Global": {
          "type": "boolean"
        },
        "GoalValue": {
          "type": "number",
          "format": "double"
        },
        "Hidden": {
          "type": "boolean"
        },
        "ID": {
          "type": "string"
        },
        "Incremental": {
          "type": "boolean"
        },
        "ListOrder": {
          "type": "integer",
          "format": "int32"
        },
        "LockedIcons": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/models.Icon"
          }
        },
        "Name": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "Namespace": {
          "type": "string"
        },
        "StatCode": {
          "type": "string"
        },
        "Tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "UnlockedIcons": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/models.Icon"
          }
        },
        "UpdatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "models.AchievementOrderUpdateRequest": {
      "required": ["targetOrder"],
      "properties": {
        "targetOrder": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "models.AchievementRequest": {
      "required": [
        "hidden",
        "incremental",
        "achievementCode",
        "defaultLanguage",
        "name",
        "description",
        "lockedIcons",
        "unlockedIcons",
        "tags",
        "goalValue",
        "statCode"
      ],
      "properties": {
        "achievementCode": {
          "type": "string"
        },
        "customAttributes": {
          "type": "object"
        },
        "defaultLanguage": {
          "type": "string"
        },
        "description": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "global": {
          "type": "boolean"
        },
        "goalValue": {
          "type": "number",
          "format": "double"
        },
        "hidden": {
          "type": "boolean"
        },
        "incremental": {
          "type": "boolean"
        },
        "lockedIcons": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/models.Icon"
          }
        },
        "name": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "statCode": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "unlockedIcons": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/models.Icon"
          }
        }
      }
    },
    "models.AchievementResponse": {
      "required": [
        "hidden",
        "incremental",
        "global",
        "listOrder",
        "namespace",
        "achievementCode",
        "defaultLanguage",
        "name",
        "description",
        "lockedIcons",
        "unlockedIcons",
        "tags",
        "createdAt",
        "updatedAt"
      ],
      "properties": {
        "achievementCode": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "customAttributes": {
          "type": "object"
        },
        "defaultLanguage": {
          "type": "string"
        },
        "description": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "global": {
          "type": "boolean"
        },
        "goalValue": {
          "type": "number",
          "format": "double"
        },
        "hidden": {
          "type": "boolean"
        },
        "incremental": {
          "type": "boolean"
        },
        "listOrder": {
          "type": "integer",
          "format": "int32"
        },
        "lockedIcons": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/models.Icon"
          }
        },
        "name": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "namespace": {
          "type": "string"
        },
        "statCode": {
          "type": "string"
        },
        "status": {
          "description": "Achievement progression status: [INIT, TIED]",
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "unlockedIcons": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/models.Icon"
          }
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "models.AchievementUpdateRequest": {
      "required": [
        "hidden",
        "incremental",
        "defaultLanguage",
        "name",
        "description",
        "lockedIcons",
        "unlockedIcons",
        "tags",
        "goalValue",
        "statCode"
      ],
      "properties": {
        "customAttributes": {
          "type": "object"
        },
        "defaultLanguage": {
          "type": "string"
        },
        "description": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "global": {
          "type": "boolean"
        },
        "goalValue": {
          "type": "number",
          "format": "double"
        },
        "hidden": {
          "type": "boolean"
        },
        "incremental": {
          "type": "boolean"
        },
        "lockedIcons": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/models.Icon"
          }
        },
        "name": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "statCode": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "unlockedIcons": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/models.Icon"
          }
        }
      }
    },
    "models.AdditionalInfo": {
      "required": ["numberOfAchievements", "numberOfHiddenAchievements", "numberOfVisibleAchievements"],
      "properties": {
        "numberOfAchievements": {
          "type": "integer",
          "format": "int64"
        },
        "numberOfHiddenAchievements": {
          "type": "integer",
          "format": "int64"
        },
        "numberOfVisibleAchievements": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "models.ContributorResponse": {
      "required": ["id", "namespace", "achievementCode", "userId", "contributedValue", "createdAt"],
      "properties": {
        "achievementCode": {
          "type": "string"
        },
        "contributedValue": {
          "type": "number",
          "format": "double"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "id": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        },
        "userId": {
          "type": "string"
        }
      }
    },
    "models.GlobalAchievementResponse": {
      "required": ["id", "namespace", "achievementCode", "status", "latestValue", "createdAt", "name"],
      "properties": {
        "achievedAt": {
          "type": "string",
          "format": "date-time"
        },
        "achievementCode": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "id": {
          "type": "string"
        },
        "latestValue": {
          "type": "number",
          "format": "double"
        },
        "name": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "namespace": {
          "type": "string"
        },
        "status": {
          "type": "integer",
          "format": "int32"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "models.Icon": {
      "required": ["url", "slug"],
      "properties": {
        "slug": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "models.PaginatedAchievementResponse": {
      "required": ["data", "paging"],
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/models.AchievementResponse"
          }
        },
        "paging": {
          "$ref": "#/definitions/models.Pagination"
        }
      }
    },
    "models.PaginatedContributorResponse": {
      "required": ["data", "paging"],
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/models.ContributorResponse"
          }
        },
        "paging": {
          "$ref": "#/definitions/models.Pagination"
        }
      }
    },
    "models.PaginatedGlobalAchievementResponse": {
      "required": ["data", "paging"],
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/models.GlobalAchievementResponse"
          }
        },
        "paging": {
          "$ref": "#/definitions/models.Pagination"
        }
      }
    },
    "models.PaginatedTagResponse": {
      "required": ["data", "paging"],
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/models.TagResponse"
          }
        },
        "paging": {
          "$ref": "#/definitions/models.Pagination"
        }
      }
    },
    "models.PaginatedUserAchievementResponse": {
      "required": ["data", "countInfo", "paging"],
      "properties": {
        "countInfo": {
          "$ref": "#/definitions/models.AdditionalInfo"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/models.UserAchievementResponse"
          }
        },
        "paging": {
          "$ref": "#/definitions/models.Pagination"
        }
      }
    },
    "models.PaginatedUserContributionResponse": {
      "required": ["data", "paging"],
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/models.UserContributionResponse"
          }
        },
        "paging": {
          "$ref": "#/definitions/models.Pagination"
        }
      }
    },
    "models.Pagination": {
      "required": ["previous", "next"],
      "properties": {
        "next": {
          "type": "string"
        },
        "previous": {
          "type": "string"
        }
      }
    },
    "models.PublicAchievementResponse": {
      "required": [
        "hidden",
        "incremental",
        "global",
        "listOrder",
        "namespace",
        "achievementCode",
        "name",
        "description",
        "lockedIcons",
        "unlockedIcons",
        "tags",
        "createdAt",
        "updatedAt"
      ],
      "properties": {
        "achievementCode": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "customAttributes": {
          "type": "object"
        },
        "description": {
          "type": "string"
        },
        "global": {
          "type": "boolean"
        },
        "goalValue": {
          "type": "number",
          "format": "double"
        },
        "hidden": {
          "type": "boolean"
        },
        "incremental": {
          "type": "boolean"
        },
        "listOrder": {
          "type": "integer",
          "format": "int32"
        },
        "lockedIcons": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/models.Icon"
          }
        },
        "name": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "statCode": {
          "type": "string"
        },
        "status": {
          "description": "Achievement progression status: [INIT, TIED]",
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "unlockedIcons": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/models.Icon"
          }
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "models.PublicAchievementsResponse": {
      "required": ["data", "paging"],
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/models.PublicAchievementResponse"
          }
        },
        "paging": {
          "$ref": "#/definitions/models.Pagination"
        }
      }
    },
    "models.TagResponse": {
      "required": ["name", "namespace", "createdAt"],
      "properties": {
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "name": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        }
      }
    },
    "models.UserAchievementResponse": {
      "required": ["id", "achievementCode", "status", "latestValue", "achievedAt", "name"],
      "properties": {
        "achievedAt": {
          "type": "string",
          "format": "date-time"
        },
        "achievementCode": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "latestValue": {
          "type": "number",
          "format": "double"
        },
        "name": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "status": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "models.UserContributionResponse": {
      "required": ["canClaimReward", "id", "namespace", "achievementCode", "userId", "contributedValue", "name"],
      "properties": {
        "achievementCode": {
          "type": "string"
        },
        "canClaimReward": {
          "description": "CanClaimReward is a flag whether the user can claim the reward of not",
          "type": "boolean"
        },
        "contributedValue": {
          "type": "number",
          "format": "double"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "description": "Name is achievement name",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "namespace": {
          "type": "string"
        },
        "userId": {
          "type": "string"
        }
      }
    },
    "response.Error": {
      "required": ["errorCode", "errorMessage"],
      "properties": {
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "errorMessage": {
          "type": "string"
        }
      }
    },
    "service.ImportConfigResponse": {
      "required": ["replacedConfigs", "ignoredConfigs", "failedConfigs", "newConfigs"],
      "properties": {
        "failedConfigs": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "ignoredConfigs": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "newConfigs": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "replacedConfigs": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "authorization": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "security": [
    {
      "authorization": []
    }
  ]
}
